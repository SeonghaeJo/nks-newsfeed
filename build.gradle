plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
}

allprojects {
    group = 'com.personal'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

// Redis tasks
tasks.register('redisUp', Exec) {
    group = 'local'
    description = 'Start Redis with Docker Compose'
    workingDir = file("${rootProject.projectDir}/local/compose")
    commandLine '/opt/homebrew/bin/docker-compose', '-f', 'docker-compose-redis.yml', 'up', '-d'
}

tasks.register('redisDown', Exec) {
    group = 'local'
    description = 'Stop Redis with Docker Compose'
    workingDir = file("${rootProject.projectDir}/local/compose")
    commandLine '/opt/homebrew/bin/docker-compose', '-f', 'docker-compose-redis.yml', 'down'
}

tasks.register('redisLogs', Exec) {
    group = 'local'
    description = 'Show Redis logs'
    workingDir = file("${rootProject.projectDir}/local/compose")
    commandLine '/opt/homebrew/bin/docker-compose', '-f', 'docker-compose-redis.yml', 'logs', '-f', 'redis'
}

// RabbitMQ tasks
tasks.register('rabbitUp', Exec) {
    group = 'local'
    description = 'Start RabbitMQ with Docker Compose'
    workingDir = file("${rootProject.projectDir}/local/compose")
    commandLine '/opt/homebrew/bin/docker-compose', '-f', 'docker-compose-rabbitmq.yml', 'up', '-d'
}

tasks.register('rabbitDown', Exec) {
    group = 'local'
    description = 'Stop RabbitMQ with Docker Compose'
    workingDir = file("${rootProject.projectDir}/local/compose")
    commandLine '/opt/homebrew/bin/docker-compose', '-f', 'docker-compose-rabbitmq.yml', 'down'
}

tasks.register('rabbitLogs', Exec) {
    group = 'local'
    description = 'Show RabbitMQ logs'
    workingDir = file("${rootProject.projectDir}/local/compose")
    commandLine '/opt/homebrew/bin/docker-compose', '-f', 'docker-compose-rabbitmq.yml', 'logs', '-f', 'rabbitmq'
}

// Neo4j tasks
tasks.register('neo4jUp', Exec) {
    group = 'local'
    description = 'Start Neo4j with Docker Compose'
    workingDir = file("${rootProject.projectDir}/local/compose")
    commandLine '/opt/homebrew/bin/docker-compose', '-f', 'docker-compose-neo4j.yml', 'up', '-d'
}

tasks.register('neo4jDown', Exec) {
    group = 'local'
    description = 'Stop Neo4j with Docker Compose'
    workingDir = file("${rootProject.projectDir}/local/compose")
    commandLine '/opt/homebrew/bin/docker-compose', '-f', 'docker-compose-neo4j.yml', 'down'
}

tasks.register('neo4jLogs', Exec) {
    group = 'local'
    description = 'Show Neo4j logs'
    workingDir = file("${rootProject.projectDir}/local/compose")
    commandLine '/opt/homebrew/bin/docker-compose', '-f', 'docker-compose-neo4j.yml', 'logs', '-f', 'neo4j'
}

// Common tasks
tasks.register('containerStatus', Exec) {
    group = 'local'
    description = 'Check Container status'
    workingDir = file("${rootProject.projectDir}/local/compose")
    commandLine '/opt/homebrew/bin/docker-compose', '-f', 'docker-compose-redis.yml', '-f', 'docker-compose-rabbitmq.yml', '-f', 'docker-compose-neo4j.yml', 'ps'
}

tasks.register('allUp', Exec) {
    group = 'local'
    description = 'Start all containers (Redis + RabbitMQ + Neo4j)'
    workingDir = file("${rootProject.projectDir}/local/compose")
    commandLine '/opt/homebrew/bin/docker-compose', '-f', 'docker-compose-redis.yml', '-f', 'docker-compose-rabbitmq.yml', '-f', 'docker-compose-neo4j.yml', 'up', '-d'
}

tasks.register('allDown', Exec) {
    group = 'local'
    description = 'Stop all containers (Redis + RabbitMQ + Neo4j)'
    workingDir = file("${rootProject.projectDir}/local/compose")
    commandLine '/opt/homebrew/bin/docker-compose', '-f', 'docker-compose-redis.yml', '-f', 'docker-compose-rabbitmq.yml', '-f', 'docker-compose-neo4j.yml', 'down'
}
